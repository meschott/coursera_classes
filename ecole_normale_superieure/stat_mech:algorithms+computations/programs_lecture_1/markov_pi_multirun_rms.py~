import random, math, pylab
import matplotlib.pyplot as plt

def markov_pi(N, delta): 
    x, y = 1.0, 1.0
    n_hits = 0
    for i in range(N):
        del_x, del_y = random.uniform(-delta, delta), random.uniform(-delta, delta)
        if abs(x + del_x) < 1.0 and abs(y + del_y) < 1.0:
            x, y = x + del_x, y + del_y
        if x**2 + y**2 < 1.0: n_hits += 1
    return n_hits

n_runs = 500
n_trials_list = []
sigmasqs = []
for poweroftwo in range(4, 13):
        n_trials = 2 ** poweroftwo
        sigmasq = 0.0
        for run in range(n_runs):
                pi_est = 4.0 * direct_pi(n_trials) / float(n_trials)
                sigmasq += (pi_est - math.pi) ** 2
        sigmasqs.append(math.sqrt(sigmasq/(n_runs)))
        n_trials_list.append(n_trials)

plt.plot(n_trials_list, sigmasqs, 'o')
plt.plot([10.0, 10000.0], [1.642 / math.sqrt(10.0), 1.642 / math.sqrt(10000.0)])
plt.xscale('log')
plt.yscale('log')
plt.xlabel('number of trials')
plt.ylabel('root mean square deviation')
plt.title('Direct sampling of pi: root mean square deviation vs. n_trials')
plt.savefig('direct_sampling_rms_deviation_fitted.png')
plt.show()
